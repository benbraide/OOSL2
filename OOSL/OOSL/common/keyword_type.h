#pragma once

#ifndef OOSL_KEYWORD_TYPE_H
#define OOSL_KEYWORD_TYPE_H

namespace oosl{
	namespace common{
		enum class keyword_type{
			module,
			export_,
			import_,
			void_,
			any,
			auto_,
			bool_,
			byte,
			char_,
			wchar,
			int8,
			uint8,
			int16,
			uint16,
			int32,
			uint32,
			int64,
			uint64,
			int128,
			uint128,
			float32,
			float64,
			float128,
			int_,
			float_,
			string,
			wstring,
			enum_,
			union_,
			struct_,
			class_,
			namespace_,
			ref,
			const_,
			final_,
			array_t,
			pointer_t,
			function_t,
			nullptr_t,
			nan_t,
			type_t,
			node_t,
			storage_t,
			decltype_,
			static_cast_,
			reinterpret_cast_,
			static_,
			thread_local_,
			true_,
			false_,
			indeterminate,
			nullptr_,
			NaN,
			using_,
			typedef_,
			operator_,
			sizeof_,
			typeof,
			echo,
			if_,
			else_,
			unless,
			while_,
			do_,
			until,
			for_,
			switch_,
			case_,
			default,
			break_,
			continue_,
			return_,
			throw_,
			try_,
			catch_,
			finally,
			new_,
			delete_,
			self,
			placeholder,
			call,
		};
	}
}

#endif /* !OOSL_KEYWORD_TYPE_H */
